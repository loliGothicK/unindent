name: Full Test

on:
  push:
    branches: [main]
  pull_request:

jobs:
  ubuntu:
    runs-on: ${{ matrix.compiler.os }}
    strategy:
      fail-fast: false
      matrix:
        compiler:
          - cxx: clang++
            ver: 17
            os: ubuntu-24.04
          - cxx: clang++
            ver: 18
            os: ubuntu-24.04
          - cxx: clang++
            ver: 19
            os: ubuntu-24.04
          - cxx: g++
            ver: 13
            os: ubuntu-24.04
          - cxx: g++
            ver: 14
            os: ubuntu-24.04
    steps:
      - uses: actions/checkout@v4

      - name: extract vcpkg revision
        id: vcpkg-revision
        run: |
          cat ./vcpkg.json \
            | jq '.["builtin-baseline"]' \
            | xargs -I {} echo "builtin-baseline={}" \
            >> $GITHUB_OUTPUT

      - name: Install CMake
        run: |
          sudo apt-get -qq update
          sudo apt-get install -y -qq pkg-config cmake

      - name: Install Clang
        if: startsWith(matrix.compiler.cxx, 'clang')
        run: |
          wget https://apt.llvm.org/llvm.sh
          chmod +x ./llvm.sh
          sudo ./llvm.sh ${{ matrix.compiler.ver }}

      - name: Install GCC
        if: matrix.compiler.cxx == 'g++' && matrix.compiler.ver == 14
        run: sudo apt update && sudo apt install -y gcc-14

      - name: vcpkg build
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          manifest-dir: ${{ github.workspace }}
          triplet: x64-linux-release
          revision: ${{ steps.vcpkg-revision.outputs.builtin-baseline }}
          extra-args: --x-feature=tests
          token: ${{ github.token }}
          cache-key: linux-${{ matrix.compiler.cxx }}-${{ matrix.compiler.ver }}
          github-binarycache: true

      - name: Build and test
        run: |
          cmake -S . -B build \
            ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} \
            -DBUILD_TESTING=ON \
            -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }}-${{ matrix.compiler.ver }}
          cmake --build build
          cd build && ctest

  windows:
    runs-on: windows-${{ matrix.config.os }}
    strategy:
      fail-fast: false
      matrix:
        config:
          - vs: "Visual Studio 17 2022"
            os: 2025
          - vs: "Visual Studio 17 2022"
            os: 2022
    steps:
      - uses: actions/checkout@v4

      - name: extract vcpkg revision
        id: vcpkg-revision
        run: |
          cat ./vcpkg.json `
            | jq '.["builtin-baseline"]' `
            | % { echo "builtin-baseline=$_" } `
            | Out-File -FilePath $env:GITHUB_OUTPUT -Append

      - name: vcpkg build
        uses: johnwason/vcpkg-action@v6
        id: vcpkg
        with:
          manifest-dir: ${{ github.workspace }}
          triplet: x64-windows
          revision: ${{ steps.vcpkg-revision.outputs.builtin-baseline }}
          extra-args: --x-feature=tests
          token: ${{ github.token }}
          cache-key: windows-${{ matrix.config.vs }}
          github-binarycache: true

      - name: Build and test
        run: |
          $ErrorActionPreference = "Stop"
          Set-StrictMode -Version Latest
          cmake -S . -B build `
            ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} `
            -G "${{ matrix.config.vs }}" -A x64 `
            -DBUILD_TESTING=ON
          cmake --build build
          cd build && ctest

  macos:
    runs-on: macos-15
    strategy:
      fail-fast: false
      matrix:
        cxx: ["clang++", "$(brew --prefix llvm@18)/bin/clang++"]
    steps:
      - uses: actions/checkout@v4

      - name: extract vcpkg revision
        id: vcpkg-revision
        run: |
          cat ./vcpkg.json \
            | jq '.["builtin-baseline"]' \
            | xargs -I {} echo "builtin-baseline={}" \
            >> $GITHUB_OUTPUT

      - name: vcpkg build
        id: vcpkg
        uses: johnwason/vcpkg-action@v6
        with:
          manifest-dir: ${{ github.workspace }}
          triplet: arm64-osx-release
          extra-args: --x-feature=tests
          revision: ${{ steps.vcpkg-revision.outputs.builtin-baseline }}
          token: ${{ github.token }}
          cache-key: macos-${{ matrix.cxx }}
          github-binarycache: true

      - name: Build and test
        run: |
          cmake -S . -B build \
            ${{ steps.vcpkg.outputs.vcpkg-cmake-config }} \
            -DBUILD_TESTING=ON \
            -DCMAKE_CXX_COMPILER=${{ matrix.cxx }}
          cmake --build build
          cd build && ctest
